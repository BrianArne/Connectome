Hey Brian, thought I would write some notes for you if you would like to check out this upload yourself.

I updated the ToDo.txt with some notes on things that I have completed.

There are a few things that you might have to do/configure to get it running on your usual setup.  There is a newer version of Surf-Ice that I have been using, and it's much friendlier with writing scripts to run when opening it.  The version is v1.0.20190518, you can find it here: https://github.com/neurolabusc/surf-ice/releases/tag/v1.0.20190518 (I am using the surfice_linux.zip, not the source code, because there is a version in there called surficeOld that lets this older laptop with 'Legacy OpenGL'; see if you can get that one to run instead of the regular surfice file just to minimize issues).  

Look at the bottom line in the JupyterConnectome.ipynb jupyter file and you'll see where surf_ice is defined using local directories on my laptop.  Go ahead and change chose to match where you have this new Surf-Ice version installed, or just comment that out, uncomment the previous surf_ice definition line, and change the directories in the Globals.py file.  Either way, have it surficeOld run the si_start.py file with "-S <path to si_start.py file>".  Those calls to the 'gl' library in the file are handled by this version of Surf-Ice itself as internal commands, so no need to separately install the library it is using to your local python.

I have it currently set to auto-refresh Surf-Ice on region pair selection when you click the 'Select Input Region' button, but it requires a library called "xdotool" that you can install through apt if you'd like.  If you install it, select your region pairs and hit the button; also, check out a commented line at the end of the change_inputs() function in the jupyter file.  If you uncomment it, it will auto-refresh Surf-Ice without hitting the button, but having the shift key held down as you would when selecting multiple contiguous lines will disrupt the auto-refresh because Surf-Ice will often hear a Shift+Ctrl+R instead of just the Ctrl+R hotkey it uses to refresh.  If you don't want to install xdotool, just comment out the subprocess.call() line in the select_in() function so it doesn't raise an error, and just switch to the Surf-Ice program and hit Ctrl+R.

Selecting inputs and outputs with the selection widgets and then clicking 'Draw Selection' will draw another plotly graph to Jupyter notebook.  You can select any combination of outputs and region pair inputs at any time, and just either select all or deselect all to get the whole original graph.  The selection functions are all in the JupyterConnectome file, you just send the lists of output and input nodes that are *not* selected to the remove_edges method in ChordGraph.  I decided to try and just use methods that the igraph library already had around, just to get used to it.  The igraph gets recursively traversed through the non-selected inputs and outputs, marking edges that need to be removed.  After that is all done, the marked edges get removed, and then vertexes of degree 0 get removed.  It runs through some instantiation methods to re-write the plotly graph, prints it out, and then redefines the _graph object as what it originally was, allowing you to just select anything afterward.  I'm not digging the memory that requires, basically always having two instances of _graph at the same time, but it works for right now.

So the main functionalities are there, just need to test it on an actual research file.  There are some additions I would like to make to the project that requires me to translate this thing into Python 3.7, including a FileUpload widget from ipywidgets that'll allow better file selection.  So that's my next main step after this, might as well get it done before piling more code on top of it.

Let me know if you have any questions or something didn't seem to update right.

Drew
